<?php

namespace Tests\Feature\MyTest\super;

use App\Models\Hour;
use App\Models\Permission;
use App\Models\Role;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class superAdministratorTest extends TestCase
{

    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->artisan('db:seed');
    }


    /** @test */
    public function super_admin_can_add_new_staff_to_database()
    {
        $this->withoutExceptionHandling();


        $user = User::find(1);

        $response = $this->actingAs($user)->get('/addNewPerson');
        $this->assertCount(4, User::all());
        $response->assertViewIs('super.registration');
    }

    /** @test */
    public function super_admin_send_post_on_add_new_person()
    {
        $this->withoutExceptionHandling();

        $user = User::find(1);

        $this->assertCount(4, Role::all());
        $this->actingAs($user)->post('/addNewPerson',['name' => 'farshad', 'email' => 'farshad@app.com', 'password' => 'password', 'role_id' => 'administrator']);
        $this->assertCount(5, User::all());
        $this->assertEquals('farshad', User::find(5)->name);
    }

    /** @test */
    public function super_can_add_hour()
    {
        $this->withoutExceptionHandling();

        $user = User::find(1);

        $this->actingAs($user)->post('/createNewHour' , $this->data($user));

        $hour = Hour::first();

        $this->assertCount(1, Hour::all());
        $this->assertEquals(Hour::first()->user_id, $user->id);
    }

    public function data(User $user): array
    {
        return [
            'user_id' => $user->id,
            'Date' => '1983/02/05',
            'Hour' => '800',
        ];
    }
}
